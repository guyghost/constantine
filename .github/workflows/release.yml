name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Build binaries
        run: |
          mkdir -p dist
          
          # Linux AMD64
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/constantine-linux-amd64 ./cmd/bot
          GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o dist/backtest-linux-amd64 ./cmd/backtest
          
          # Linux ARM64
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/constantine-linux-arm64 ./cmd/bot
          GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o dist/backtest-linux-arm64 ./cmd/backtest
          
          # macOS AMD64
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/constantine-darwin-amd64 ./cmd/bot
          GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o dist/backtest-darwin-amd64 ./cmd/backtest
          
          # macOS ARM64
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/constantine-darwin-arm64 ./cmd/bot
          GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o dist/backtest-darwin-arm64 ./cmd/backtest
          
          # Windows AMD64
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/constantine-windows-amd64.exe ./cmd/bot
          GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o dist/backtest-windows-amd64.exe ./cmd/backtest

      - name: Create checksums
        run: |
          cd dist
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Generate SBOM
        run: |
          go install github.com/CycloneDX/cyclonedx-gomod/cmd/cyclonedx-gomod@latest
          cyclonedx-gomod app -json -output dist/sbom.json

      - name: Generate changelog
        id: changelog
        run: |
          # Get previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            echo "First release" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "changelog<<EOF" >> $GITHUB_OUTPUT
            git log $PREVIOUS_TAG..HEAD --pretty=format:"- %s (%h)" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          body: |
            ## What's Changed
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            Download the appropriate binary for your platform and architecture.
            
            ### Verify checksums
            ```bash
            sha256sum -c checksums.txt
            ```
            
            ## Security
            
            - SBOM (Software Bill of Materials) included in release assets
            - All binaries built from tagged source code
            - Checksums provided for verification
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
